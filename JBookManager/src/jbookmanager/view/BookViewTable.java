/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BookViewTable.java
 *
 * Created on 27.02.2009, 19:39:53
 */
package jbookmanager.view;

import java.io.Serializable;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import jbookmanager.model.Library;

/**
 *
 * @author uli
 */
public class BookViewTable extends JTable implements Serializable
{

    /** Creates new form BeanForm */
    public BookViewTable()
    {
        initComponents();
    }

    public void setLibrary(Library library)
    {
        DefaultTableModel model = new DefaultTableModel(library.getData(), columnNames);
        setModel(model);
        sorter = new TableRowSorter<DefaultTableModel>(model);
        setRowSorter(sorter);
    }

    public void containsFilter(String substr, int... column)
    {
        sorter.setRowFilter(RowFilter.regexFilter(".*" + substr + ".*", column));
    }

    public void isFilter(String substr, int... column)
    {
        sorter.setRowFilter(RowFilter.regexFilter(substr));
    }

    public void greaterFilter(String substr, int... column)
    {
        //TODO implement in main frame
        sorter.setRowFilter(RowFilter.numberFilter(RowFilter.ComparisonType.AFTER, new Double(substr), column));
    }

    public void lessFilter(String substr, int... column)
    {
        //TODO implement in main frame
        sorter.setRowFilter(RowFilter.numberFilter(RowFilter.ComparisonType.BEFORE, new Double(substr), column));
    }

    public void regexFilter(String regex, int... column)
    {
        sorter.setRowFilter(RowFilter.regexFilter(regex, column));
    }

    public void deleteFilter()
    {
        sorter.setRowFilter(null);
    }

    /**
     * Updates the table content
     * @param library
     */
    public void updateData(Library library)
    {
        ((DefaultTableModel)getModel()).setDataVector(library.getData(), columnNames);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents
    private TableRowSorter<DefaultTableModel> sorter;
    private static final String[] columnNames = {"ISBN", "Title", "Price", "Count", "Comment"};
    //Column specifiers
    public static final int ISBN_COLUMN = 0;
    public static final int TITLE_COLUMN = 1;
    public static final int PRICE_COLUMN = 2;
    public static final int COUNT_COLUMN = 3;
    public static final int COMMENT_COLUMN = 4;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
