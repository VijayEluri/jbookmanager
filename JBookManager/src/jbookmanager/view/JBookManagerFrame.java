/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JBookManagerFrame.java
 *
 * Created on 26.02.2009, 19:37:49
 */
package jbookmanager.view;

import java.io.File;
import java.io.IOException;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import jbookmanager.model.JBookManagerConfiguration;
import jbookmanager.model.Library;
import jbookmanager.controller.LibraryManager;
import jbookmanager.controller.LibraryTableModel;

/**
 *
 * @author uli
 */
public class JBookManagerFrame extends javax.swing.JFrame
{

    /** Creates new form JBookManagerFrame */
    public JBookManagerFrame()
    {
        initComponents();
        fc.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f)
            {
                try
                {
                    return f.getCanonicalPath().endsWith(".lgz");
                }
                catch (IOException ex)
                {
                    Logger.getLogger(JBookManagerFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                return false; //File is not accessible so don't accept it
            }

            @Override
            public String getDescription()
            {
                return "Library data files";
            }
        });
        initLibrary();
    }

    private void initLibrary()
    {
        try
        {
            String libraryFilename = config.getProperty("LibraryFile");
            if (!libraryFilename.isEmpty())
            {
                library = LibraryManager.readLibrary(libraryFilename);
            }
            else //Create a new library
            {
                fc.setDialogTitle(i18n.getString("Create new library"));
                fc.showSaveDialog(this);
                File libraryFile = fc.getSelectedFile();
                config.setProperty("LibraryFile", libraryFile.getAbsolutePath());
                library = new Library();
            }
        }
        catch (IOException ex)
        {
            Logger.getLogger(JBookManagerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newLibraryMenuItem = new javax.swing.JMenuItem();
        saveLibraryMenuItem = new javax.swing.JMenuItem();
        saveCopyMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new LibraryTableModel(library));
        jScrollPane1.setViewportView(jTable1);

        fileMenu.setText( i18n.getString("JBookManagerFrame.fileMenu.text")); // NOI18N

        newLibraryMenuItem.setText( i18n.getString("JBookManagerFrame.newLibraryMenuItem.text")); // NOI18N
        newLibraryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newLibraryMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newLibraryMenuItem);

        saveLibraryMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveLibraryMenuItem.setText( i18n.getString("JBookManagerFrame.saveLibraryMenuItem.text")); // NOI18N
        saveLibraryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLibraryMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveLibraryMenuItem);

        saveCopyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveCopyMenuItem.setText( i18n.getString("JBookManagerFrame.saveCopyMenuItem.text")); // NOI18N
        saveCopyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCopyMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveCopyMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText( i18n.getString("JBookManagerFrame.editMenu.text")); // NOI18N
        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveCopyMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveCopyMenuItemActionPerformed
    {//GEN-HEADEREND:event_saveCopyMenuItemActionPerformed
        fc.setDialogTitle(i18n.getString("Save copy"));
        fc.showSaveDialog(this);
        String filename = fc.getSelectedFile().getAbsolutePath();
        LibraryManager.writeLibrary(library, filename);
    }//GEN-LAST:event_saveCopyMenuItemActionPerformed

    private void saveLibraryMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveLibraryMenuItemActionPerformed
    {//GEN-HEADEREND:event_saveLibraryMenuItemActionPerformed
        LibraryManager.writeLibrary(library, config.getProperty("LibraryFile"));
    }//GEN-LAST:event_saveLibraryMenuItemActionPerformed

    private void newLibraryMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_newLibraryMenuItemActionPerformed
    {//GEN-HEADEREND:event_newLibraryMenuItemActionPerformed
        int sel = JOptionPane.showConfirmDialog(this,
                                                i18n.getString("Save the current library?"),
                                                "Save current library",
                                                JOptionPane.YES_NO_OPTION,
                                                JOptionPane.QUESTION_MESSAGE);
        //Save the library if the user clicked "Yes"
        if(sel == JOptionPane.YES_OPTION)
        {
            LibraryManager.writeLibrary(library, config.getProperty("LibraryFile"));
        }
        library = new Library();
    }//GEN-LAST:event_newLibraryMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {

            public void run()
            {
                new JBookManagerFrame().setVisible(true);
            }
        });
    }
    private Library library;
    private JFileChooser fc = new JFileChooser();
    private JBookManagerConfiguration config = new JBookManagerConfiguration();
    private ResourceBundle i18n = ResourceBundle.getBundle("jbookmanager/view/Bundle");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newLibraryMenuItem;
    private javax.swing.JMenuItem saveCopyMenuItem;
    private javax.swing.JMenuItem saveLibraryMenuItem;
    // End of variables declaration//GEN-END:variables
}
